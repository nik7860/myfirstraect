{"version":3,"sources":["componants/Navbar.jsx","componants/Textform.jsx","componants/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","react_router_dom","aria-current","to","role","placeholder","onClick","togmode","color","htmlFor","Textform","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","forhtml","head","value","onChange","event","target","rows","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","length","Alert","alert","msg","prototypes","PropTypes","string","isRequired","abouttype","defaultProps","App","setmode","_useState3","_useState4","setcolor","_useState5","_useState6","setalert","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.c834c4f8.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Link} from \"react-router-dom\";\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <div>\r\n      <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <Link className=\"nav-link\" to=\"/About\">About</Link>\r\n        </li>\r\n        \r\n        \r\n      </ul>\r\n      <form className=\"d-flex\" role=\"search\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n      </form>\r\n      <div className=\"form-check form-switch mx-2\">\r\n  <input className=\"form-check-input\" type=\"checkbox\" onClick={props.togmode} role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n  <label className={`form-check-label text-${props.color}`} htmlFor=\"flexSwitchCheckDefault\">Dark Mode</label>\r\n</div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n    </div>\r\n  )\r\n}\r\nNavbar.prototypes={\r\n    title:PropTypes.string.isRequired,\r\n    abouttype:PropTypes.string.isRequired\r\n}\r\n\r\nNavbar.defaultProps={\r\n    title: 'Set Title',\r\n    abouttype: 'set abouttext'\r\n}","import React,{useState} from 'react'\r\n\r\nexport default function Textform(props) {\r\n    const handleupclick=()=>{\r\n        //console.log(\"Uppercase was clicked\"+text);\r\n        let newText=text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Sucess\",\"text in uppercase\")\r\n\r\n    }\r\n    const handlelclick=()=>{\r\n        //console.log(\"lowercase was clicked\"+text);\r\n        let newText=text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Sucess\",\"text in lowercase\")\r\n\r\n    }\r\n    const handlelclear=()=>{\r\n      //console.log(\"lowercase was clicked\"+text);\r\n      let newText=\"\";\r\n      setText(newText);\r\n      props.showAlert(\"Sucess\",\"text is clear\")\r\n\r\n  }\r\n  const handlecopy=()=>{\r\n    var text=document.getElementById(\"mybox\");\r\n    text.select();\r\n    navigator.clipboard.writeText(text.value);\r\n    props.showAlert(\"Sucess\",\"text is copy\")\r\n  }\r\n    const handleUpChange=(event)=>{\r\n        //console.log(\"Uppercase was chgange\");\r\n        setText(event.target.value)\r\n    }\r\n    const[text,setText]=useState('Enter text here');\r\n  return (\r\n    <><div className='container'>\r\n      <div className=\"mb-3 \">\r\n        <label forhtml=\"exampleFormControlTextarea1\" className=\"form-label\">{props.head}</label>\r\n        <textarea className={`form-control bg-${props.mode} text-${props.color}`} value={text} onChange={handleUpChange} id=\"mybox\" rows=\"8\"></textarea>\r\n\r\n      </div>\r\n      <button className='btn btn-primary mx-2' onClick={handleupclick}>Upper case </button>\r\n      <button className='btn btn-primary mx-2' onClick={handlelclick}>Lower case</button>\r\n      <button className='btn btn-primary mx-2' onClick={handlelclear}>Clear</button>\r\n      <button className='btn btn-primary mx-2' onClick={handlecopy}>Copy</button>\r\n    </div><div className='container'>\r\n        <h1>Your text summary!</h1>\r\n        <p>{text.split(\" \").length-1}words and {text.length}characters</p>\r\n      </div></>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport propsTypes from 'prop-types';   \r\n\r\nexport default function Alert(props) {\r\n  return (\r\n    <div>\r\n      <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{props.alert.type}</strong> : {props.alert.msg}\r\n        \r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n","\nimport './App.css';\nimport Navbar from './componants/Navbar.jsx';\nimport Textform from './componants/Textform.jsx';\n\nimport Alert from './componants/Alert'\nimport React,{ useState } from 'react';\nimport About from './componants/About.jsx';\n\nimport { Route, Routes,Link} from \"react-router-dom\";\n\n\n\n\nfunction App() {\n  const [mode ,setmode]=useState(\"light\");\n  const [color ,setcolor]=useState(\"dark\");\n  const [alert ,setalert]=useState(\"null\")\n  const showAlert=(type,msg)=>{\n    setalert({\n      type:type,\n      msg:msg\n    }\n    )\n    \n\n  }\n  const togmode=()=>{\n    if(mode===\"light\"){\n      setmode(\"dark\");\n      setcolor(\"white\")\n      showAlert(\"Sucess\",\"Dark Mode is Enable\")\n    }else{\n      setmode(\"light\");\n      setcolor(\"Dark\")\n      showAlert(\"Sucess\",\"Light Mode is Enable\")\n    }\n  }\n  return (\n    <><div className={`container-fluid bg-${mode} text-${color}`}>\n    <Navbar  title=\"Nikhil\" mode={mode} togmode={togmode} color={color}/>\n  \n    <Alert  alert={alert} />\n\n    <Textform head=\"Enter text\" showAlert={showAlert}mode={mode} color={color}/>\n\n    \n    \n    \n    </div>\n    \n    </>\n);\n\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from \"react-router-dom\";\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <BrowserRouter>\n    <App />\n    </BrowserRouter>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}